#include<stdio.h>
#include<conio.h>
int x=1,i=1,k=1,l,r[10000],res[100000],r1[10000],t[100000],val;
  struct node{
  int data;
  struct node *next;
  struct node *child[];
  }*root=NULL,*root1=NULL,*prev=NULL;
  
  struct node * newnode(int key){
  struct node *temp=(struct node *)(malloc(sizeof(struct node));
  temp->data=key;
  temp->next=NULL;
  temp->child[1]=NULL;
  }
  void *insert(struct node *r,int data,int key){
  if(r->data==data){
  if(i==1){
  r->child[i]=newnode(key);
  prev=r->child[i];
  i++;
  }
  else{
  r->child[i]=newnode(key);
  prev->next=r->child[i];
  prev=r->child[i];        //to keep the end of a linked list in a level
  i++;
  }
  }
  else{
  i=1;
  if(rooot->child!=NULL){
  root1=root->child;
  k++;
  insert(root1,data,key);
  }
  else{
  root=root1;
  }
  }
  return;
  }
  
  void *levelorder(struct node *head){
  static int k=2;t[1]=1;
  if(!head){return NULL;}
  if(head->next==NULL){
  t[k]=head->data;
  for(i=1;i<=k;i++){
  res[i]=r[t[k]];
  }
  for(i=1;i<=k;i++){
  for(l=i;l<=k;l++){
  if(res[i]>res[l]){
  val=res[i];res[i]=res[l];res[l]=val;
  }
  }
  }
  if(k%2==0){
  r1[x]=(res[k/2+1]+res[k/2])/2;x++;
  }
  else{
  r1[x]=res[k/2+1];
  }
  head=head->child[1];
  }
  else{
  t[k]=head->child[k]->data;k++;
  levelorder(head->child[k]);
  }
  }
  
  
  
  int main(){
  int n,j,a[10000][2],temp;
  struct node *newnode=(struct node *)(malloc(sizeof(struct node));
  struct node *temp1=(struct node *)(malloc(sizeof(struct node));
  newnode->data=1;
  newnode->child[1]=NULL;
  newnode->next=NULL;
  temp1=root=root1=newnode;
  scanf("%d",&n);
  for(j=1;j<=n-1;j++){
  scanf("%d",&a[j][1]);
  scanf("%d",&a[j][1]);
  }
  for(j=1;j<=n;j++){
  scanf("%d",r[j]);
  }
  for(j=1;j<=n-1;j++){
  insert(root1,a[j][1],a[j][2]);
  }
  leveloreder(temp1);
  --x;
  for(j=1;j<=x;j++){
  for(l=j;l<=x;l++){
  if(r1[j]>r1[l]){
  temp=r1[j];r1[j]=r1[l];r1[l]=temp;
  }
  }
  }
  if(x%2==0){
  printf("%d",(res[(x/2)+1]+res[x/2])/2);
  }
  else{
  printf("%d",res[(x/2)+1]);
  }
  return 0;
  }

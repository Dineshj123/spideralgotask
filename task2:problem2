#include<stdio.h>
#include<stdlib.h>
#include<conio.h>

int t,m;

struct node
{
    int key;
    int count;
    struct node *left, *right;
};
struct node *newNode(int item)
{
    struct node *temp =  (struct node *)malloc(sizeof(struct node));
    temp->key = item;
    temp->left = temp->right = NULL;
    temp->count = 1;
    return temp;
}
 
int  preorder(struct node *root)
{
    if (root != NULL)
    {    
        //printf("%d ",t);
        if(root->count>1)
          {t-=(root->count-((root->count)-1));
                         }
                         preorder(root->left);
                        preorder(root->right);
    }
    return t;
}
 
struct node* insert(struct node* node, int key)
{
        if (node == NULL) return newNode(key);
 
     if (key == node->key)
    {
       (node->count)++;
        return node;
    }
 
        if (key < node->key)
        node->left  = insert(node->left, key);
    else
        node->right = insert(node->right, key);
 
        return node;
}
 
int fun1(int n)
{
    int rem, i=1, binary=0;
    while (n!=0)
    {
        rem=n%2;
        n/=2;
        binary+=rem*i;
        i*=10;
    }
    return binary;
}

int main()
{
    int i,dec,n,bin,m;
    struct node *root = NULL;
    scanf("%d %d",&n,&m);
    for(i=1;i<=m;i++)
    {
    scanf("%d",&bin);
    dec=fun1(bin);
    root = insert(root,dec);
}t=m;
     t=preorder(root);
      getch();
}
